[x] Build DB schema
[x] Fill out initial data set
[x] Test
[x] database build script
[x] Update README with db installation instructions
[x] connection.js builds connection to db
[x] connection.js exports db connection
[x] orm.js import db connection
[x] orm.selectAll() + unit test code
[x] orm.insertOne() + unit test code
[x] orm.updateOne() + unit test code
[x] orm.js exports orm object
[x] burger.js pseudocode + import orm object
[x] burger calls orm.selectAll() + unit test code
[x] burger calls orm.insertOne() + unit test code
[x] burger calls orm.updateOne() + unit test code
[x] burger.js exports burger object
[x] burgers_controller.js` psuedocode + import Express and burger.js`
[x] burgers_controller provides get route for the app
[x] burger_controller.js exports the `router`.
[x] burgers_controller provides post route for the app
[x] burgers_controller provides put route for the app
[x] front end now displays contents of burgerzDB
[x] front end enables entry of a new burger to database
[x] front end enables entry of a burger to be devoured and updates DB state
[x] front end has waiting area to left and devoured area to right
[x] front end: undevoured burgers are in waiting area
[x] front end: new burgers go into the waiting area
[x] front end: each burger in the waiting area has a `Devour it!` button.
[x] front end: each burger has a number as well as a name; number represents order of entry
[x] front end: A burger will move to the right side of the page when the user clicks button.
[x] Bug fix: front end should reject burger names over 25 characters in length
[] Bug fix: prevent empty submission of a burger from creating a new entry in DB
[] Back end prevents burger names over 25 characters in length
[] Back end prevents addition of a burger with no name
[] Test results
[] Clean up of code prior to upload to Heroku
[] Test results running on Heroku
[] Update README with node module installation instructions


Future
======
[] Update ORM to use sQL code that is safer from SQL injection - see comments in MYSQL homework
[] Enhance unit tests to use promises and validate test results
[] Page should reject bad input with on-page text, not alerts